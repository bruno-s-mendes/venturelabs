{"version":3,"sources":["components/AddUser.js","actions/index.js","components/ClientList.js","components/Sidenav.js","App.js","reportWebVitals.js","reducers/clientsReducer.js","reducers/index.js","store/index.js","index.js"],"names":["AddUser","state","formIndex","name","lName","email","tel","cep","address1","address2","birthDate","cpf","income","updatestate","bind","handleClick","handleSubmit","event","preventDefault","this","setState","target","value","props","client","clients","user","userList","push","className","htmlFor","id","type","onChange","onClick","React","Component","connect","clientsReducer","dispatch","payload","ClientList","undefined","children","isHidden","hidden","map","index","Sidenav","updtePage","App","page","updatePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db99ed76.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addClient } from '../actions';\n\nclass AddUser extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      formIndex: 1,\n      name: '',\n      lName: '',\n      email: '',\n      tel: '',\n      cep: '',\n      address1: '',\n      address2: '',\n      birthDate: '',\n      cpf: '',\n      income: '',\n    };\n    this.updatestate = this.updatestate.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    this.setState({\n      formIndex: event.target.value,\n    })\n  }\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { client, clients } = this.props;\n    const user = this.state;\n    const userList = clients;\n    userList.push(user)\n    client(userList)\n    const state0 = {\n      formIndex: 1,\n      name: '',\n      lName: '',\n      email: '',\n      tel: '',\n      cep: '',\n      address1: '',\n      address2: '',\n      birthDate: '',\n      cpf: '',\n      income: '',\n    };\n    this.setState(state0)\n  }\n\n  updatestate(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  render() {\n    const { name, lName, email, tel, formIndex, cep, address1, address2, birthDate, cpf, income } = this.state;\n    switch (formIndex) {\n      case '2':\n        return (\n          <form className=\"flex flex-col\" >\n            <label\n              className=\"text-blue-600\"\n              htmlFor=\"cep\"\n            >CEP</label>\n            <input\n              id=\"cep\"\n              type=\"text\"\n              name=\"cep\"\n              className=\"bg-blue-100 border-2 border-blue-600 text-blue-600 rounded-lg p-1\"\n              value={ cep }\n              onChange={ event => this.updatestate(event)}\n            />\n            <label\n              className=\"text-blue-600\"\n              htmlFor=\"address1\"\n            >Endereço 1</label>\n            <input\n              id=\"address1\"\n              type=\"text\"\n              name=\"address1\"\n              className=\"bg-blue-100 border-2 border-blue-600 text-blue-600 rounded-lg p-1\"\n              value={ address1 }\n              onChange={ event => this.updatestate(event)}\n            />\n            <label\n              className=\"text-blue-600\"\n              htmlFor=\"address2\"\n            >Endereço 2</label>\n            <input\n              id=\"address2\"\n              type=\"text\"\n              name=\"address2\"\n              className=\"bg-blue-100 border-2 border-blue-600 text-blue-600 rounded-lg p-1\"\n              value={ address2 }\n              onChange={ event => this.updatestate(event)}\n            />\n            <div className=\"flex flex-row\">\n            <button\n              type=\"button\"\n              value=\"1\"\n              className=\"bg-blue-800 text-blue-100 rounded-lg m-1 p-2 flex-1\"\n              onClick={ event => this.handleClick(event)}\n            >\n            Anterior\n            </button>\n            <button\n              type=\"button\"\n              value=\"3\"\n              className=\"bg-blue-800 text-blue-100 rounded-lg m-1 p-2 flex-1\"\n              onClick={ event => this.handleClick(event)}\n            >\n            Próximo\n            </button>\n            </div>\n          </form>\n        );\n      case '3':\n        return (\n          <form className=\"flex flex-col\" >\n            <label\n              className=\"text-blue-600\"\n              htmlFor=\"birthDate\"\n            >Data de Nascimento</label>\n            <input \n              id=\"birthDate\"\n              type=\"date\"\n              name=\"birthDate\"\n              className=\"bg-blue-100 border-2 border-blue-600 text-blue-600 rounded-lg p-1\"\n              value={ birthDate }\n              onChange={ event => this.updatestate(event)}\n            />\n            <label\n              className=\"text-blue-600\"\n              htmlFor=\"cpf\"\n            >CPF</label>\n            <input\n              id=\"cpf\"\n              type=\"text\"\n              name=\"cpf\"\n              className=\"bg-blue-100 border-2 border-blue-600 text-blue-600 rounded-lg p-1\"\n              value={ cpf }\n              onChange={ event => this.updatestate(event)}\n            />\n            <label\n              className=\"text-blue-600\"\n              htmlFor=\"income\"\n            >Renda mensal</label>\n            <input\n              id=\"income\"\n              type=\"text\"\n              name=\"income\"\n              className=\"bg-blue-100 border-2 border-blue-600 text-blue-600 rounded-lg p-1\"\n              value={ income }\n              onChange={ event => this.updatestate(event)}\n            />\n            <div className=\"flex flex-row\">\n            <button\n              type=\"button\"\n              value=\"2\"\n              className=\"bg-blue-800 text-blue-100 rounded-lg m-1 p-2 flex-1\"\n              onClick={ event => this.handleClick(event)}\n            >\n            Anterior\n            </button>\n            <button\n              type=\"submit\"\n              className=\"bg-blue-800 text-blue-100 rounded-lg m-1 p-2 flex-1\"\n              onClick={ event => this.handleSubmit(event)}\n            >\n            Salvar\n            </button>\n            </div>\n          </form>\n        );    \n      default:\n        return (\n          <form className=\"flex flex-col\" >\n            <label\n              className=\"text-blue-600\"\n              htmlFor=\"name\"\n            >Nome</label>\n            <input \n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              className=\"bg-blue-100 border-2 border-blue-600 text-blue-600 rounded-lg p-1\"\n              value={ name }\n              onChange={ event => this.updatestate(event)}\n            />\n            <label\n              className=\"text-blue-600\"\n              htmlFor=\"lName\"\n            >Sobrenome</label>\n            <input\n              id=\"lName\"\n              type=\"text\"\n              name=\"lName\"\n              className=\"bg-blue-100 border-2 border-blue-600 text-blue-600 rounded-lg p-1\"\n              value={ lName }\n              onChange={ event => this.updatestate(event)}\n            />\n            <label\n              className=\"text-blue-600\"\n              htmlFor=\"email\"\n            >E-mail</label>\n            <input\n              id=\"email\"\n              type=\"text\"\n              name=\"email\"\n              className=\"bg-blue-100 border-2 border-blue-600 text-blue-600 rounded-lg p-1\"\n              value={ email }\n              onChange={ event => this.updatestate(event)}\n            />\n            <label\n              className=\"text-blue-600\"\n              htmlFor=\"tel\"\n            >Telefone</label>\n            <input\n              id=\"tel\"\n              type=\"text\"\n              name=\"tel\"\n              className=\"bg-blue-100 border-2 border-blue-600 text-blue-600 rounded-lg p-1\"\n              value={ tel }\n              onChange={ event => this.updatestate(event)}\n            />\n            <button\n              type=\"button\"\n              value=\"2\"\n              className=\"bg-blue-800 text-blue-100 rounded-lg m-1 p-2\"\n              onClick={ event => this.handleClick(event)}\n            >\n            Próximo\n            </button>\n          </form>\n        );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  clients: state.clientsReducer.clients,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  client: (payload) => dispatch(addClient(payload)),\n});\n\nAddUser.propTypes = {\n  client: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUser);","export const ADD_CLIENT = 'ADD_CLIENT';\n\nexport function addClient(newClient) {\n  return ({\n    type: ADD_CLIENT,\n    payload: newClient,\n  });\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass ClientList extends React.Component {\n\n  handleClick(event) {\n    if (event.target.children[0] !== undefined && event.target.value === 0) {\n      const isHidden = event.target.children[0].hidden\n      event.target.children[0].hidden = !isHidden\n    }\n  }\n\n  render() {\n    const { clients } = this.props;\n    return (\n      <ul className=\"w-full\">\n        {\n          clients.map((client, index) => (\n            <li\n              key={index}\n              className=\"bg-blue-200 text-blue-900 rounded-lg w-10/12 p-2 flex flex-col m-2\"\n              onClick={ event => this.handleClick(event)}\n              value=\"header\"\n              >{`${client.name} ${client.lName}`}\n            <span\n              hidden={true}\n            >\n              <div className=\"flex justify-between\">\n                <ul>\n                  <li>{`email: ${client.email}`}</li>\n                  <li>{`CPF: ${client.cpf}`}</li>\n                  <li>{`Telefone: ${client.tel}`}</li>\n                </ul>\n                <ul>\n                  <li>{`CEP: ${client.cep}`}</li>\n                  <li>{`Address 1: ${client.address1}`}</li>\n                  <li>{`Address 2: ${client.address2}`}</li>\n                </ul>\n                <ul>\n                  <li>{`Data de Nascimento: ${client.birthDate}`}</li>\n                  <li>{`Salário mensal: ${client.income}`}</li>\n                </ul>\n              </div>\n            </span>\n            </li>\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  clients: state.clientsReducer.clients,\n});\n\nClientList.propTypes = {\n  clients: PropTypes.array.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(ClientList);","import React from 'react';\n\nclass Sidenav extends React.Component {\n  render() {\n    const { updtePage } = this.props;\n    return (\n      <nav className=\"flex flex-col text-lg\">\n        <button \n          className=\"m-2 p-2 rounded-lg hover:bg-blue-700\"\n          value=\"cadastrar\"\n          onClick={ event => updtePage(event) }\n        >+ Cadastrar</button>\n        <button \n          className=\"m-2 p-2 rounded-lg hover:bg-blue-700\"\n          value=\"clientes\"\n          onClick={ event => updtePage(event) }\n        >Clientes</button>\n      </nav>\n    );\n  }\n}\n\nexport default Sidenav;","import React from 'react';\nimport AddUser from './components/AddUser';\nimport ClientList from './components/ClientList';\nimport Sidenav from './components/Sidenav';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      page: 'cadastrar',\n    };\n    this.updatePage = this.updatePage.bind(this);\n  }\n\n  updatePage(event) {\n    this.setState({\n      page: event.target.value,\n    })\n  }\n\n  render() {\n    const { page } = this.state;\n    return (\n      <div className=\"relative min-h-screen flex\">\n        <div className=\"bg-blue-800 text-blue-100 w-15 p-4\">\n        <Sidenav updtePage={this.updatePage}/>\n        </div>\n        <div className=\"flex-1 flex justify-center p-20\">\n          {page === 'cadastrar'?\n          <AddUser />\n          :<ClientList />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\n  clients: [],\n};\n\nexport default function clientsReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case 'ADD_CLIENT':\n    return {\n      ...state, clients: action.payload,\n    };\n  default:\n    return state;\n  }\n}","import { combineReducers } from 'redux';\nimport clientsReducer from './clientsReducer';\n\nconst rootReducer = combineReducers({ clientsReducer });\n\nexport default rootReducer;","import { createStore } from 'redux';\nimport rootReducer from '../reducers/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <div>\n        <App />\n      </div>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}